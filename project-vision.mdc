### Project Vision: Moat — Local Visual Annotation Task System

**Date:** 2025-06-19
**Author:** Terrence Breschi

---

## 🔍 Overview

Moat is a local-first tool for capturing UI feedback directly in the browser and writing those insights as markdown-based AI tasks. Inspired by the [`ai-dev-tasks`](https://github.com/snarktank/ai-dev-tasks) methodology, this system replaces GitHub-based task tracking with a visual feedback layer and seamless local `.mdc` file generation.

---

## 🧠 Problem

Designers, PMs, and developers often give feedback via Slack, Figma, or meetings — which must then be manually translated into structured developer tasks. This is inefficient and strips context.

---

## 🎯 Solution

Moat introduces:
- A **Chrome extension** that overlays feedback on any webpage
- A **comment-to-task** pipeline that logs feedback to a `.mdc` markdown file
- **Structured prompts** ready for AI agents (like Cursor) to execute
- A **live Moat sidebar** that displays and tracks task status visually

---

## 🔁 Dev Loop

1. Open a local dev app (React/Next or any web project)
2. Click the Moat extension to open the sidebar
3. Press `c` to enter annotation mode
4. Click any DOM element → enter a comment
5. Comment is saved to `.moat.mdc` in the local project
6. Cursor reads and executes the task from `.mdc`

---

## 🔧 Architecture Alignment with ai-dev-tasks

| Concept           | ai-dev-tasks GitHub            | Moat Extension (Local)     |
|------------------|-------------------------------|----------------------------|
| Task Format       | `.mdc` markdown files          | `.mdc` markdown files      |
| Prompt Capture    | GitHub Issues / manual         | DOM annotation + comment   |
| Storage           | GitHub repo                    | Local project folder       |
| Agent Integration | Cursor via GitHub watch        | Cursor via local `.mdc`    |
| Execution Flow    | AI watches repo, runs task     | AI watches file, runs task |

---

## ✨ Why This Matters

By reducing the gap between visual feedback and actionable code edits, Moat makes human-AI collaboration faster, more intuitive, and native to developer workflows. It removes the dependency on GitHub infrastructure while maintaining the structured, markdown-based approach pioneered by `ai-dev-tasks`.

---

## 📦 Output Example (`.moat.mdc`)

```md
### Task 001
Prompt: Add padding to top section
Selector: #hero
Page: http://localhost:3000
Timestamp: 1715736000
Status: in queue
```

---

## 🛠 Current Status

- MVP scoped to Chrome + local dev + markdown writing
- `.moat.mdc` writes tasks on every annotation
- Future: screenshot capture, batch modes, two-way syncing

---

## 🧭 Vision

Moat is the local feedback loop you can float tasks into. Think of it as your markdown bridge between product thinking and AI implementation.
